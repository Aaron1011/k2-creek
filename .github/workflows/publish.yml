name: Publish

on:
  push:
    tags:
      - "*"

jobs:
  create-release:
    runs-on: 'ubuntu-latest'
    steps:
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
    - shell: bash
      run: |
        echo '${{ steps.create-release.outputs.upload_url }}' > upload-url.txt
    - name: Save GitHub release upload URL for next job
      uses: actions/upload-artifact@v1
      with:
        name: upload-url
        path: upload-url.txt
  create-assets:
    needs:
      - 'create-release'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
        include:
          - os: windows-latest
            target: i686-pc-windows-msvc
            asset_path: ./target/release/k2-creek.exe
            asset_name: k2-creek-x86.exe
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_path: ./target/release/k2-creek.exe
            asset_name: k2-creek-x64.exe
    steps:
      - uses: actions/checkout@v2
      - name: Fetch GitHub Release upload URL
        uses: actions/download-artifact@v1
        with:
          name: upload-url
      - name: Set up environment variables
        shell: bash
        run: echo "::set-env name=upload_url::$(cat upload-url/upload-url.txt)"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-${{ matrix.target }}
          target: ${{ matrix.target }}
          default: true
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: ${{ matrix.asset_path }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
